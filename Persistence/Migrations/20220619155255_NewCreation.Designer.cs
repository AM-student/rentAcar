// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220619155255_NewCreation")]
    partial class NewCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Contact", b =>
                {
                    b.Property<int>("cu_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cutext")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cu_id");

                    b.ToTable("Contactus");
                });

            modelBuilder.Entity("Domain.Feedback", b =>
                {
                    b.Property<string>("fb_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("email_fb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fb_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_fb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("text_fb")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fb_id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Domain.Manager", b =>
                {
                    b.Property<int>("manager_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("atk_id")
                        .HasColumnType("int");

                    b.Property<int>("bankaccount")
                        .HasColumnType("int");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("managertype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("personal_id")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("zip")
                        .HasColumnType("int");

                    b.HasKey("manager_id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("Domain.Salesperson", b =>
                {
                    b.Property<int>("sp_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("atk_id")
                        .HasColumnType("int");

                    b.Property<int>("bankaccount")
                        .HasColumnType("int");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("personal_id")
                        .HasColumnType("int");

                    b.Property<int>("zip")
                        .HasColumnType("int");

                    b.HasKey("sp_id");

                    b.ToTable("Salespeople");
                });

            modelBuilder.Entity("Domain.Security", b =>
                {
                    b.Property<int>("security_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("atk_id")
                        .HasColumnType("int");

                    b.Property<int>("bankaccount")
                        .HasColumnType("int");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("personal_id")
                        .HasColumnType("int");

                    b.Property<string>("securitytype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("zip")
                        .HasColumnType("int");

                    b.HasKey("security_id");

                    b.ToTable("Securitys");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usertype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("zip")
                        .HasColumnType("int");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.VWGOLF", b =>
                {
                    b.Property<string>("vwg_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description_vwg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vwg_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vwg_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("vwg_price")
                        .HasColumnType("float");

                    b.Property<string>("vwg_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vwg_vin")
                        .HasColumnType("int");

                    b.Property<int>("vwg_year")
                        .HasColumnType("int");

                    b.HasKey("vwg_id");

                    b.ToTable("VWGolfs");
                });

            modelBuilder.Entity("Domain.VWPassat", b =>
                {
                    b.Property<string>("vwp_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description_vwp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vwp_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vwp_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("vwp_price")
                        .HasColumnType("float");

                    b.Property<string>("vwp_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vwp_vin")
                        .HasColumnType("int");

                    b.Property<int>("vwp_year")
                        .HasColumnType("int");

                    b.HasKey("vwp_id");

                    b.ToTable("VWPassats");
                });
#pragma warning restore 612, 618
        }
    }
}
